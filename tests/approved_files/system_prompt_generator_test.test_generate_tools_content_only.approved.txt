## ls
List directory contents with detailed information

Arguments:
 - path: string (optional) - Directory path to list (defaults to current directory)

Usage: 🛠️ ls [path]

Examples:
🛠️ ls
🛠️ ls /home/user

## cat
Display file contents with line numbers

Arguments:
 - filename: string (required) - Path to the file to display
 - line_range: string (optional) - Optional line range in format 'start-end' (e.g., '1-10')

Usage: 🛠️ cat <filename> [line_range]

Examples:
🛠️ cat myfile.txt
🛠️ cat script.py 1-20

## create-file
Create new files with optional content

⚠️ CRITICAL FORMATTING RULES:
- Content starts immediately after the filename on the following lines
- Do NOT add commentary after the tool in the same message
- Everything after the filename until message end is captured as content

Arguments:
 - filename: string (required) - Path to the file to create (directories will be created automatically)
 - content: string (optional) - Initial content for the file. Everything after the filename is content!

Usage: 🛠️ create-file <filename> [content]

Examples:
🛠️ create-file newfile.txt
🛠️ create-file script.py print("Hello World")
🛠️ create-file multi-line.py This is Line 1
This is Line 2

## edit-file
Edit files by replacing content in specified line ranges.

⚠️ CRITICAL FORMATTING RULES:
- Content MUST start on the NEXT line after the command
- STOP your message immediately after content ends
- Everything from the next line until message end is captured as content

Replace mode: First deletes the specified range, then inserts new content at that position.

Arguments:
 - filename: string (required) - Path to the file to edit
 - edit_mode: string (required) - Edit mode: 'replace' (delete range then insert), 'insert', 'delete'
 - line_range: string (required) - Line range in format 'start-end' or 'line_number' (e.g., '1-3' or '10' for single line)

Usage: 🛠️ edit-file <filename> <edit_mode> <line_range>

Examples:
🛠️ edit-file myfile.txt replace 1-3
Hello World
🛠️ edit-file test.txt delete 1
🛠️ edit-file test.txt insert 1
New Headline
🛠️ edit-file test.py insert 3
print('hello')
🛠️ edit-file test.py replace 5
new = 2

## patch-file
Apply a unified diff patch to a file

Arguments:
 - filename: string (required) - Path to the file to patch
 - patch_content: string (required) - Unified diff patch content to apply

Usage: 🛠️ patch-file <filename> <patch_content>

Examples:
🛠️ patch-file myfile.txt "@@ -1,3 +1,3 @@\n-old line\n+new line\n context line"
🛠️ patch-file test.py "@@ -5,2 +5,2 @@\n-    old_var = 1\n+    new_var = 2"

## subagent
Create a subagent to handle a specific task using the same agent architecture

Arguments:
 - task_description: string (required) - Detailed description of the task for the subagent to perform

Usage: 🛠️ subagent <task_description>

Examples:
🛠️ subagent Write a Python function to calculate fibonacci numbers
🛠️ subagent Create a simple HTML page with a form

## WriteTodos
Organize your work in TODOs. Use this tool to create or update those TODOs

Arguments:
 - content: string (required) - Markdown text to represent the todos

Usage: 🛠️ WriteTodos <content>

Examples:
🛠️ WriteTodos ## Todo\n- Item 1
🛠️ WriteTodos\n## Todo\n- Feature exploration\n\n## Doing\n- Implementing tool\n\n## Done\n- Initial setup

## remember
Store a memory to .memory.md for later recall

Arguments:
 - content: string (required) - The memory content to store

Usage: 🛠️ remember <content>

Examples:
🛠️ remember The user prefers Python over JavaScript
🛠️ remember API key format: sk-proj-xxxxx

## recall
Retrieve all stored memories from .memory.md

Examples:
🛠️ recall

## complete-task
Signal task completion with a summary of what was accomplished

Arguments:
 - summary: string (required) - Final summary of what was accomplished

Usage: 🛠️ complete-task <summary>

Examples:
🛠️ complete-task Successfully created the user registration system
🛠️ complete-task Fixed the bug in the payment processing module

## bash
Execute bash commands

Arguments:
 - command: string (required) - The bash command to execute

Usage: 🛠️ bash <command>

Examples:
🛠️ bash echo hello
🛠️ bash ls -la
🛠️ bash pwd
